// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  user_id String @id @default(uuid())
  first_name String @db.VarChar(15)
  last_name String @db.VarChar(15) 
  email String @db.VarChar(50) 
  username String @db.VarChar(15) 

  projects Project[]
  activity_reminders ActivityReminder[]
  task_reminders TaskReminder[]
}

model Project {
  project_id Int @id @default(autoincrement())
  project_name String @db.VarChar(100)
  project_start_date DateTime
  duration Int
  days_till_renew Int
  completed Boolean
  save_as_cycle Boolean @default(false)
  
  user User @relation(fields: [user_id], references: [user_id])
  user_id String
  cycle Cycle?
  activity Activity[]

  @@index([user_id])
}

model Cycle {
  cycle_id Int @id @default(autoincrement())
  
  project_id Int @unique
  Project Project @relation(fields: [project_id], references: [project_id])
}


model Activity {
  activity_id Int @id @default(autoincrement())
  activity_number Int @default(0)
  activity_name String @db.VarChar(100)
  duration Int
  completed Boolean
  note String @db.VarChar(512) @default("")
  
  project_id Int
  project Project @relation(fields: [project_id], references: [project_id])
  tasks Task[]
  tag_list ActivityTagList[]
  reminder ActivityReminder?

  @@index([project_id])
}

model Task {
  task_id Int @id @default(autoincrement())
  task_number Int @default(0)
  task_name String @db.VarChar(100)
  days_till_due Int
  completed Boolean
  note String @db.VarChar(512)
  
  activity_id Int
  activity Activity @relation(fields: [activity_id], references: [activity_id])
  tag_list TaskTagList[]
  reminder TaskReminder?

  @@index([activity_id])
}

model ActivityTagList {
  activity_tag_list_id Int @id @default(autoincrement())
  
  activity Activity @relation(fields: [activity_id], references: [activity_id])
  activity_id Int @unique @default(0)
  tag Tag @relation(fields: [tag_id], references: [tag_id])
  tag_id Int @unique @default(0)
}

model TaskTagList {
  task_tag_list_id Int @id @default(autoincrement())
  
  task Task @relation(fields: [task_id], references: [task_id])
  task_id Int @unique @default(0)
  tag Tag @relation(fields: [tag_id], references: [tag_id])
  tag_id Int @unique @default(0)
}

model Tag {
  tag_id Int @id @default(autoincrement())
  tag_name String @db.VarChar(100) @unique
  
  activity_tag_list ActivityTagList[]
  task_tag_list TaskTagList[]
}

model ActivityReminder {
  activity_reminder_id Int @id @default(autoincrement())
  reminder_date DateTime
  
  activity Activity @relation(fields: [activity_id], references: [activity_id])
  activity_id Int @unique @default(0)
  user User @relation(fields: [user_id], references: [user_id])
  user_id String 

  @@index([user_id])
}

model TaskReminder {
  task_reminder_id Int @id @default(autoincrement())
  reminder_date DateTime
  
  task Task @relation(fields: [task_id], references: [task_id])
  task_id Int @unique @default(0)
  user User @relation(fields: [user_id], references: [user_id])
  user_id String

  @@index([user_id])
}